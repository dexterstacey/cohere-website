{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qGCMlD,MAAMC,EAAc,CAACC,EAASC,KAEnC,IAAIC,EADJD,EAAQE,UAAY,GAEpBD,EAAO,8CAA8CF,QACrDC,EAAQG,mBAAmB,aAAcF,ICR9BG,EAAaC,MAAOL,EAAU,QACzCF,EAAY,eAAeE,GAC3B,IACE,MAAMM,QAAiBC,MAAM,2CAC7B,IAAKD,EAASE,GACZ,MAAM,IAAIf,MAAM,yBAIlB,MAAO,CACLgB,SAAS,E,WAFQH,EAASI,QAK5B,MAAOC,GACP,MAAO,CACLF,SAAS,EACTV,QAASY,EAAMZ,WCLRa,EAAkB,IAAIC,sBATb,CAACC,EAASC,KAC9B,MAAOC,GAASF,EAEXE,EAAMC,iBAEXD,EAAME,OAAOC,UAAUC,OAAO,mBAC9BL,EAASM,UAAUL,EAAME,WAG4C,CACrEI,KAAM,KACNC,UAAW,KAgBAC,EAAc,IAAIX,sBAXb,CAACC,EAASC,KAC1BD,EAAQW,SAAST,IACXA,EAAMC,iBACRD,EAAME,OAAOQ,IAAMV,EAAME,OAAOS,QAAQD,IAGxCX,EAASM,UAAUL,EAAME,cAKgC,CAE7DK,UAAW,K,MCjCbK,EAAiB,IAAAC,IAAoBnC,EAAA,SAAAoC,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCMrF,MAAMC,EAAc9B,MAAOL,EAAU,QAC1C,IACIoC,EADAnC,EAAO,GAIX,MAAMoC,QAAcjC,EAAWJ,GAG/B,IAAKqC,EAAM5B,QAET,YADAX,EAAY,GAAGuC,EAAMtC,cAAYC,GAInC,MAAMsC,KAAEA,GAASD,EAAMC,KAAKC,QAG5B,IAAIC,EACAxC,EAAQmB,UAAUsB,SAAS,WAC7BD,EAAqBE,EAAUJ,EAAM,QACrCF,EAAS,CAAC,UAAW,UAAW,YACvBpC,EAAQmB,UAAUsB,SAAS,YACpCD,EAAqBE,EAAUJ,EAAM,QACrCF,EAAS,CAAC,UAAW,UAAW,YAGlCI,EAAmBf,SAAQ,CAACkB,EAAIC,KAE1BA,EAAQR,EAAO9C,OAAS,IAAGsD,EAAQ,GAEvC3C,GAAQ,8DAcPmC,EAAAQ,mLAI4C,YAApBR,EAAYQ,GAAQ,sBAAAD,EAAAE,8DAEhCF,EAAAG,uEACfC,EAAAnB,4BAEIe,EAAAK,wEAQNhD,EAAME,UAAA,GAGJF,EAAAG,mBAA4B,aAAAF,G,KAG5ByC,EAAA,CAAAO,EAAAC,I,iIClEIC,EAAWC,SAASC,iBAAiB,eACrCC,EAAaF,SAASC,iBAAiB,iBACvCE,EAAcH,SAASC,iBAAiB,YAG9CC,EAAW7B,SAAS+B,IAClBhC,EAAYiC,QAAQD,MAItBD,EAAY9B,SAAQ,SAAUiC,GAC5B9C,EAAgB6C,QAAQC,MAKtBP,GACFA,EAAS1B,SAASkC,IAChBxB,EAAYwB","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-decd1d6a498026ef.js","js/utilities.js","js/fetchBlogs.js","js/lazyLoading.js","node_modules/@parcel/runtime-js/lib/runtime-1e310e431d9c08a9.js","js/renderBlogs.js","js/script.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"51ds3\\\":\\\"index.4e774b65.js\\\",\\\"gdIp3\\\":\\\"load-icon.39f87d70.png\\\"}\"));","\"use strict\";\r\n/**\r\n * Display message in UI\r\n * @param {String} message\r\n * @param {DomElement} element\r\n */\r\nexport const loadMessage = (message, element) => {\r\n  element.innerHTML = \"\";\r\n  let html;\r\n  html = `<p style=\"color:white; text-align:center;\">${message}</p>`;\r\n  element.insertAdjacentHTML(\"afterbegin\", html);\r\n};\r\n","import { loadMessage } from \"./utilities.js\";\r\n\r\nexport const fetchBlogs = async (element = null) => {\r\n  loadMessage(\"Loading...ðŸš€\", element);\r\n  try {\r\n    const response = await fetch(\"https://calm-inlet-18337.herokuapp.com/\");\r\n    if (!response.ok) {\r\n      throw new Error(\"Couldn't fetch blogs'\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return {\r\n      success: true,\r\n      data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    };\r\n  }\r\n};\r\n","\"use strict\";\r\n\r\n//-------------------\r\n// Lazy Load Sections\r\nconst revealSection = (entries, observer) => {\r\n  const [entry] = entries;\r\n\r\n  if (!entry.isIntersecting) return;\r\n\r\n  entry.target.classList.remove(\"section--hidden\");\r\n  observer.unobserve(entry.target);\r\n};\r\n\r\nexport const sectionObserver = new IntersectionObserver(revealSection, {\r\n  root: null,\r\n  threshold: 0.1,\r\n});\r\n\r\n//-------------------\r\n// Lazy Load Images\r\nconst loadImage = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      entry.target.src = entry.target.dataset.src;\r\n\r\n      // unobserve\r\n      observer.unobserve(entry.target);\r\n    }\r\n  });\r\n};\r\n\r\nexport const imgObserver = new IntersectionObserver(loadImage, {\r\n  // play around with this\r\n  threshold: 0.5,\r\n});\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gdIp3\")).toString();","\"use strict\";\r\nimport { fetchBlogs } from \"./fetchBlogs.js\";\r\nimport { loadMessage } from \"./utilities.js\";\r\nimport { imgObserver } from \"./lazyLoading.js\";\r\nimport img from \"../images/load-icon.png\";\r\n\r\nexport const renderBlogs = async (element = null) => {\r\n  let html = ``;\r\n  let colors;\r\n\r\n  // fetch blogs\r\n  const blogs = await fetchBlogs(element);\r\n\r\n  //show error if it fails\r\n  if (!blogs.success) {\r\n    loadMessage(`${blogs.message}  ðŸš©`, element);\r\n    return;\r\n  }\r\n\r\n  const { data } = blogs.data.results;\r\n\r\n  // Limit to only 3 articles\r\n  let firstThreeArticles;\r\n  if (element.classList.contains(\"c-news\")) {\r\n    firstThreeArticles = filterArr(data, \"news\");\r\n    colors = [\"#ff9343\", \"#72ccca\", \"#ff6865\"];\r\n  } else if (element.classList.contains(\"c-jobs\")) {\r\n    firstThreeArticles = filterArr(data, \"jobs\");\r\n    colors = [\"#282828\", \"#ff6865\", \"#72ccca\"];\r\n  }\r\n\r\n  firstThreeArticles.forEach((el, index) => {\r\n    // reset colors after every 3 blogs\r\n    if (index > colors.length - 1) index = 0;\r\n\r\n    html += `\r\n        <div class=\"news__item\" style=\"background-color: ${colors[index]};\">\r\n          <div style=\"font-size: 1.6rem; font-weight: bold; display: inline-block; white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis; ${\r\n            colors[index] === \"#282828\" ? \"color: white\" : \"\"\r\n          }\">${el.name}</div>\r\n          <a href=\"https://news.wearecohere.org${\r\n            el.permalink\r\n          }\"><img style=\"height: 20rem; width: 100%;\"\r\n          src=\"${img}\"\r\n          data-src=\"${el.image}\" referrerpolicy=\"no-referrer\"></a>\r\n        </div>\r\n        `;\r\n  });\r\n\r\n  element.innerHTML = \"\";\r\n  // insert blogs under the news div\r\n  element.insertAdjacentHTML(\"afterbegin\", html);\r\n\r\n  lazyLoadBlog();\r\n};\r\n\r\nconst filterArr = (arr, category) => {\r\n  const returnedArray = arr\r\n    .filter((blog) => blog.category.includes(category))\r\n    .slice(0, 3);\r\n\r\n  return returnedArray;\r\n};\r\n\r\nconst lazyLoadBlog = () => {\r\n  const imgTargets = document.querySelectorAll(\"img[data-src]\");\r\n\r\n  imgTargets.forEach((img) => {\r\n    imgObserver.observe(img);\r\n  });\r\n};\r\n","\"use strict\";\r\n\r\nimport { renderBlogs } from \"./renderBlogs.js\";\r\nimport { sectionObserver, imgObserver } from \"./lazyLoading.js\";\r\n\r\n//DOM ELEMENTS\r\nconst newsBlog = document.querySelectorAll(\".news__blog\");\r\nconst imgTargets = document.querySelectorAll(\"img[data-src]\");\r\nconst allSections = document.querySelectorAll(\".section\");\r\n\r\n// LAZY LOADING IMAGES SECTION\r\nimgTargets.forEach((img) => {\r\n  imgObserver.observe(img);\r\n});\r\n\r\n// REVEAL SECTIONS\r\nallSections.forEach(function (section) {\r\n  sectionObserver.observe(section);\r\n  // section.classList.add(\"section--hidden\");\r\n});\r\n\r\n// READ BLOGS SECTION\r\nif (newsBlog) {\r\n  newsBlog.forEach((news) => {\r\n    renderBlogs(news);\r\n  });\r\n}\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$5d6550968de8c61a$export$256bbd5aad6f8776","message","element","html","innerHTML","insertAdjacentHTML","$ce3ba961afdcb3a4$export$32571bc73c67d0d","async","response","fetch","ok","success","json","error","$a908ea86829f5857$export$40856bbc529472d6","IntersectionObserver","entries","observer","entry","isIntersecting","target","classList","remove","unobserve","root","threshold","$a908ea86829f5857$export$95044a44f7153186","forEach","src","dataset","$14a76d2470226446$exports","URL","resolve","import","meta","url","toString","$172ec34f52825009$export$3bb840505b3a377a","colors","blogs","data","results","firstThreeArticles","contains","$172ec34f52825009$var$filterArr","el","index","name","permalink","$parcel$interopDefault","image","arr","category","$63eb283d27decb4d$var$newsBlog","document","querySelectorAll","$63eb283d27decb4d$var$imgTargets","$63eb283d27decb4d$var$allSections","img","observe","section","news"],"version":3,"file":"index.4e774b65.js.map"}