{"version":3,"sources":["js/utilities.js","js/fetchBlogs.js","js/renderBlogs.js","js/lazyLoading.js","js/script.js"],"names":["loadMessage","message","element","innerHTML","html","insertAdjacentHTML","fetchBlogs","fetch","response","ok","Error","json","data","success","renderBlogs","blogs","results","classList","contains","firstThreeArticles","filterArr","colors","forEach","el","index","length","name","permalink","image","arr","category","returnedArray","filter","blog","includes","slice","revealSection","entries","observer","entry","isIntersecting","target","remove","unobserve","sectionObserver","IntersectionObserver","root","threshold","loadImage","src","dataset","imgObserver","newsBlog","document","querySelectorAll","imgTargets","allSections","img","observe","section","news"],"mappings":"AGAA,ADAA,AEAA,AJAA,cGEA;AACA,AHFA;AICA,AJAA;AACA;AIAA,AJCA;AACA;AIAA;AHLA,ACCA,AEKA,IAAMoD,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAjB;AACA,IAAMC,UAAU,GAAGF,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAAnB;AFLA,AEMA,IAAME,WAAW,GAAGH,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAApB,EAEA;;AACAC,UAAU,CAACjC,OAAX,CAAmB,UAACmC,GAAD,EAAS;AAC1BN,AJNK,IAAMnD,WAAW,GAAG,SIMb0D,AJND1D,OIMX,CAAoByD,GAApB,AJNyB,CAACxD,OAAD,EAAUC,OAAV,EAAsB;ACJ1C,AGWN,AJNCA,CIIF,CJJEA,ECLWI,AGab,KJRS,CAACH,ICLa,KDKrB,GAAoB,EAApB;ACLqB,ADMrB,MAAIC,IAAJ,2DCNwB;AAAA,ACEnB,AEYPoD,AJPEpD,EAAAA,EELWU,EFKP,KIOK,CAACQ,GFZY,IEYxB,CAAoB,UAAUqC,OAAV,EAAmB,yBJPgB1D,OAAjD,SAAJ;ACPwB,ACEF,AEatB2C,AJPA1C,EAAAA,OAAO,CAACG,kBAAR,CAA2B,EIOXqD,OAAhB,CAAwBC,EJPxB,EAAyCvD,GIOzC,CJPA,CIMqC,CAErC,oBFdyB;ADFD,ACEC,AFO1B,CALM;ACJmB,ACEC,AEe1B,CAHD,GAKA;AHnB0B,ACEC;ADFD,AEE1B,ADA2B,AEkB3B,IDlBMgC,ACkBFgB,QAAJ,EAAc,GDlBK,GAAG,SAAhBhB,aAAgB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AFFnB,AEEmB,ADAlB,AEmBzBc,EAAAA,QAAQ,CAAC9B,OAAT,CAAiB,UAACsC,GDlBFvB,CCkBC,EAAU,IDnBgB;AFFnB,AEEmB,ADAlB,AEoBvB,MDnBKE,KADoC,uBCoB7BqB,IAAZ;AHtB6B1D,ACEN,AEqBxB,GAFD,SHrB+BA,OAAP,2DAAiB,IAAjB;AACxB,AEIA,ADHyB,AEsB1B,MDnBK,CAACqC,KAAK,CAACC,cAAX,EAA2B,WFJf,cAAZ,EAA4BtC,OAA5B;AADwB,AEOxBqC,ADLyB,ECKzBA,KAAK,CAACE,MAAN,CAAaxB,SAAb,CAAuByB,MAAvB,CAA8B,iBAA9B;AFPwB,AEQxBJ,ADNyB,ECMzBA,QAAQ,CAACK,SAAT,CAAmBJ,KAAK,CAACE,MAAzB;AFRwB,AESzB,ADP0B,CCA3B,kBFC2BlC,KAAK,CAAC,yCAAD,CAHN;ACEQL,YAAAA,OAAP,2DAAiB,IAAjB;ADFD,AEWnB,ADRDE,ICQOwC,QDRPxC,IADqB,GCSC,GAAG,IAAIyC,oBAAJ,CAAyBT,aAAzB,EAAwC;AFR7D5B,AESRsC,ADVyB,ECUzBA,IAAI,EAAE,IFTEtC,AEQ6D,QFX7C;AEaxBuC,ADXyB,ECWzBA,SAAS,EAAE,MDNS,4BAAW7C,OAAX,CALK;ADFD,AEW6C,CAAxC,CAAxB,EAKP,YFZSM,QAAQ,CAACC,EAJQ;AAAA,AEiB1B,ADf2B;ADFD,ACOlBM,YAAAA,KALmB;ADFD;ACEC,gBAQpBA,KAAK,CAACF,OARc;ADFD,AEkB1B,ADhB2B,ICgBrBmC,SAAS,GAAG,EFbN,IAAItC,GEaVsC,EFbM,CAAU,MEaJ,CAACX,OAAD,EAAUC,OFbhB,CALc,AEkBR,EAAuB;AACvCD,ADjByB,ECiBzBA,OAAO,CAACf,OAAR,CAAgB,UAACiB,KAAD,EAAW;AFnBH,AEoBtB,ADlBuB,QCkBnBA,KAAK,CAACC,cAAV,EAA0B;AFpBJ,AEqBpBD,MAAAA,KAAK,CAACE,MAAN,CAAaQ,GAAb,GAAmBV,KAAK,CAACE,MAAN,CAAaS,OAAb,CAAqBD,GAAxC,CADwB,CAGxB;AFvBoB,ACWtB,mBDHmBzC,QAAQ,CAACG,IAAT,EARG,gBCWPI,KAAK,CAACd,OAArB,qBAAoCC,OAApC;ACaEoC,ADtBqB,MCsBrBA,QAAQ,CAACK,SAAT,CAAmBJ,KAAK,CAACE,MAAzB;AFxBoB,AEyBrB;AFjBK7B,AEkBP,ADxBwB,GCiBzB,SFXQA,IARgB;AAAA,AE2BzB,ADZSA,CCGV,WDHUA,IAbiB,GAaRG,KAAK,CAACH,IAAN,CAAWI,OAbH,CAajBJ,IAbiB,EAezB,CDRS;AACLC,cAAAA,OAAO,EAAE,IADJ;AAELD,AEkBC,ADVL,ICUWuC,UFlBPvC,CEkBkB,CDVlBV,EDRI,AEkBiB,EFlBrBU,EEkByBiC,CDVlB,CAAC5B,SAAR,CAAkBC,QCUG,ADVrB,CCU8C8B,ADVnB,QAA3B,CCUqB,ADVzB,ECU6D,ADVnB;ADVjC,AEqBT,ADVE7B,aDpBsB,CCoBtBA,kBAAkB,GAAGC,SAAS,CAACR,IAAD,EAAO,MAAP,CAA9B;ACWFmC,ADVE1B,ECUF0B,SAAS,EAAE,CDVT1B,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAT;ADrBsB,AE6BqC,ADP5D,CCOwB,CAApB,WDVL,MAGO,IAAInB,OAAO,CAACe,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;ADtBzB,ACuBtBC,cAAAA,kBAAkB,GAAGC,SAAS,CAACR,IAAD,EAAO,MAAP,CAA9B;ADvBsB,ACwBtBS,cAAAA,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAT;ADxBsB,ACyBvB,6CDXQ;AACLR,cAAAA,OAAO,EAAE,KADJ;AAELZ,ACWJkB,YAAAA,EDXIlB,OAAO,EAAE,OCWK,CAACqB,IDXArB,GCWnB,CAA2B,UAACsB,EAAD,EAAKC,KAAL,EAAe;ADbjC,ACcP,aD5BsB;AC6BtB,kBAAIA,KAAK,GAAGH,MAAM,CAACI,MAAP,GAAgB,CAA5B,EAA+BD,KAAK,GAAG,CAAR;AD7BT,AC+BtBpB,cAAAA,IAAI,4EACmDiB,MAAM,CAACG,KAAD,CADzD,6LAKIH,MAAM,CAACG,KAAD,CAAN,KAAkB,SAAlB,GAA8B,cAA9B,GAA+C,EALnD,gBAMOD,EAAE,CAACG,IANV,qEAQIH,EAAE,CAACI,SARP,oIAWUJ,EAAE,CAACK,KAXb,qEAAJ;AD/BsB,AC6CvB,aAlBD;AD3BwB,AC+CxB1B,YAAAA,OAAO,CAACC,SAAR,GAAoB,EAApB,CA7CyB,CA8CzB;ADhDwB;AAAA,ACiDxBD,YAAAA,OAAO,CAACG,kBAAR,CAA2B,YAA3B,EAAyCD,IAAzC;ADjDwB;AAAA,ACEC,GDFJ;ACEI;ADFJ,ACEI,kBDFdE,UAAU;AAAA,ACEI;ADFJ,ACEI;ADFJ,ACEI,GDFpB;ACEoB,GAAH;;AAAA,kBAAXQ,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAkDP,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACS,GAAD,EAAMC,QAAN,EAAmB;AACnC,MAAMC,aAAa,GAAGF,GAAG,CACtBG,MADmB,CACZ,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACH,QAAL,CAAcI,QAAd,CAAuBJ,QAAvB,CAAV;AAAA,GADY,EAEnBK,KAFmB,CAEb,CAFa,EAEV,CAFU,CAAtB;AAIA,SAAOJ,aAAP;AACD,CAND","file":"script.d573be0b.js","sourceRoot":"..","sourcesContent":["\"use strict\";\r\n/**\r\n * Display message in UI\r\n * @param {String} message\r\n * @param {DomElement} element\r\n */\r\nexport const loadMessage = (message, element) => {\r\n  element.innerHTML = \"\";\r\n  let html;\r\n  html = `<p style=\"color:white; text-align:center;\">${message}</p>`;\r\n  element.insertAdjacentHTML(\"afterbegin\", html);\r\n};\r\n","import { loadMessage } from \"./utilities.js\";\r\n\r\nexport const fetchBlogs = async (element = null) => {\r\n  loadMessage(\"Loading...ðŸš€\", element);\r\n  try {\r\n    const response = await fetch(\"https://calm-inlet-18337.herokuapp.com/\");\r\n    if (!response.ok) {\r\n      throw new Error(\"Couldn't fetch blogs'\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return {\r\n      success: true,\r\n      data,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: error.message,\r\n    };\r\n  }\r\n};\r\n","\"use strict\";\r\nimport { fetchBlogs } from \"./fetchBlogs.js\";\r\nimport { loadMessage } from \"./utilities.js\";\r\n\r\nexport const renderBlogs = async (element = null) => {\r\n  let html = ``;\r\n  let colors;\r\n\r\n  // fetch blogs\r\n  const blogs = await fetchBlogs(element);\r\n\r\n  //show error if it fails\r\n  if (!blogs.success) {\r\n    loadMessage(`${blogs.message}  ðŸš©`, element);\r\n    return;\r\n  }\r\n\r\n  const { data } = blogs.data.results;\r\n\r\n  // Limit to only 3 articles\r\n  let firstThreeArticles;\r\n  if (element.classList.contains(\"c-news\")) {\r\n    firstThreeArticles = filterArr(data, \"news\");\r\n    colors = [\"#ff9343\", \"#72ccca\", \"#ff6865\"];\r\n  } else if (element.classList.contains(\"c-jobs\")) {\r\n    firstThreeArticles = filterArr(data, \"jobs\");\r\n    colors = [\"#282828\", \"#ff6865\", \"#72ccca\"];\r\n  }\r\n\r\n  firstThreeArticles.forEach((el, index) => {\r\n    // reset colors after every 3 blogs\r\n    if (index > colors.length - 1) index = 0;\r\n\r\n    html += `\r\n        <div class=\"news__item\" style=\"background-color: ${colors[index]};\">\r\n          <div style=\"font-size: 1.6rem; font-weight: bold; display: inline-block; white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis; ${\r\n            colors[index] === \"#282828\" ? \"color: white\" : \"\"\r\n          }\">${el.name}</div>\r\n          <a href=\"https://news.wearecohere.org${\r\n            el.permalink\r\n          }\"><img style=\"height: 20rem; width: 100%;\"\r\n          data-src=\"../images/blog-placeholder.jpg\"\r\n           src=\"${el.image}\" referrerpolicy=\"no-referrer\"></a>\r\n        </div>\r\n        `;\r\n  });\r\n\r\n  element.innerHTML = \"\";\r\n  // insert blogs under the news div\r\n  element.insertAdjacentHTML(\"afterbegin\", html);\r\n};\r\n\r\nconst filterArr = (arr, category) => {\r\n  const returnedArray = arr\r\n    .filter((blog) => blog.category.includes(category))\r\n    .slice(0, 3);\r\n\r\n  return returnedArray;\r\n};\r\n","\"use strict\";\r\n\r\n//-------------------\r\n// Lazy Load Sections\r\nconst revealSection = (entries, observer) => {\r\n  const [entry] = entries;\r\n\r\n  if (!entry.isIntersecting) return;\r\n\r\n  entry.target.classList.remove(\"section--hidden\");\r\n  observer.unobserve(entry.target);\r\n};\r\n\r\nexport const sectionObserver = new IntersectionObserver(revealSection, {\r\n  root: null,\r\n  threshold: 0.1,\r\n});\r\n\r\n//-------------------\r\n// Lazy Load Images\r\nconst loadImage = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      entry.target.src = entry.target.dataset.src;\r\n\r\n      // unobserve\r\n      observer.unobserve(entry.target);\r\n    }\r\n  });\r\n};\r\n\r\nexport const imgObserver = new IntersectionObserver(loadImage, {\r\n  // play around with this\r\n  threshold: 0.5,\r\n});\r\n","\"use strict\";\r\n\r\nimport { renderBlogs } from \"./renderBlogs.js\";\r\nimport { sectionObserver, imgObserver } from \"./lazyLoading.js\";\r\n\r\n//DOM ELEMENTS\r\nconst newsBlog = document.querySelectorAll(\".news__blog\");\r\nconst imgTargets = document.querySelectorAll(\"img[data-src]\");\r\nconst allSections = document.querySelectorAll(\".section\");\r\n\r\n// LAZY LOADING IMAGES SECTION\r\nimgTargets.forEach((img) => {\r\n  imgObserver.observe(img);\r\n});\r\n\r\n// REVEAL SECTIONS\r\nallSections.forEach(function (section) {\r\n  sectionObserver.observe(section);\r\n  // section.classList.add(\"section--hidden\");\r\n});\r\n\r\n// READ BLOGS SECTION\r\nif (newsBlog) {\r\n  newsBlog.forEach((news) => {\r\n    renderBlogs(news);\r\n  });\r\n}\r\n"]}